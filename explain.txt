5.1.3
UserService.upgradeLevels()
 사용자 관리 로직을 새로 추가
 UserService는 UserDao 인터페이스 타입으로 userDao 빈을 DI 받아 사용하게 만든다.
UserService는 UserDao의 구현 클래스가 바뀌어도 영향받지 않도록 해야 한다. 데이터 액세스 로직이
바뀌었다고 비지니스 로직 코드를 수정하는 일이 있어서는 안된다.
 따라서 DAO의 인터페이스를 사용하고 DI를 적용해야 한다. DI를 적용하려면 당연히 UserService도
스프링의 빈으로 등록돼야 한다.

5.1.4 UserService.add()
 사용자 관리 비지니스 로직에서 대부분은 구현했지만 아직 하나가 남았다. 처음 가입하는 사용자는 기본적으로
BASIC 레벨이어야 한다는 부분이다.

 이 로직을 담는 곳으로 UserDaoJdbc의 add() 메서드는 적합하지 않아 보인다. UserDaoJdbc는 주어진 User 오브젝트를
DB에 정보를 넣고 읽는 방법에만 관심을 가져야지, 비지니스적인 의미를 지닌 정보를 설정하는 책임을 지는 것은 바람직 하지 않다.
 User 클래스에서 아예 level 필드를 Level.BASIC으로 초기화하는 방법도 있다. 하지만 처음 가입할 때를 제외하면 무의미한 정보인데
단지 이 로직을 담기 위해 클래스에서 직접 초기화하는 것은 좀 문제가 있어 보인다.
 사용자 관리에 대한 비지니스 로직을 담고 있는 UserService가 이 로직이 들어가기 알맞아 보인다. UserDao의 add() 메서드는
사용자 정보를 담은 User 오브젝트를 받아서 DB에 넣어주는 데 충실한 역할을 한다면, UserService에도 add()를 만들어두고
사용자가 등록될 때 적용할 만한 비지니스 로직을 담당하게 하면 될 것이다.